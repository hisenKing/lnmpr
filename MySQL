#### 事务隔离级别和锁的关系

###### 四种事务隔离级别

​     未提交读(Read Uncommitted)：允许脏读，也就是可能读取到其他会话中未提交事务修改的数据

​    提交读(Read Committed)：只能读取到已经提交的数据。Oracle等多数数据库默认都是该级别 (不重复读)

​    可重复读(Repeated Read)：可重复读。在同一个事务内的查询都是事务开始时刻一致的，InnoDB默认级别。在SQL标准中，该隔离级别消除了不可重复读，但是还存在幻象读

​	串行读(Serializable)：完全串行化的读，每次读都需要获得表级共享锁，读写相互都会阻塞



不可重复度重点在于update和delete，幻读重点在于insert

行锁对已存在的数据进行加锁，但是insert无锁锁住。一个事务中前后两次读，莫名其妙多了一条记录，就是幻读，行锁是无法避免的。

mysql是如果解决幻读的，行锁防止别的事务修改或删除，GAP锁防止别的事务新增，行锁和GAP锁结合形成的的Next-Key锁共同解决了RR级别在写数据时的幻读问题

​	



###### 悲观锁和乐观锁



索引的数据结构

b+树，数据存在叶子节点，非叶子节点不存储真是数据，存储指针



###### 主从同步实现原理

​    三个线程，主节点（log dump thread），其余两个(I/O thread, SQL thread)运行在从节点

Binlog Dump主要负责读取binlog日志，I/O线程用来连接主节点，获取更新的binlog日志，SQL线程负责同步的binlog日志解析与重放
